-- Pet ESP with Visual Reroll Support
local players = game:GetService("Players")
local collectionService = game:GetService("CollectionService")
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local localPlayer = players.LocalPlayer or players:GetPlayers()[1]

-- 🐾 Full Egg Chances Table
local eggChances = {
    ["Common Egg"] = { ["Dog"] = 33, ["Bunny"] = 33, ["Golden Lab"] = 33 },
    ["Uncommon Egg"] = { ["Black Bunny"] = 25, ["Chicken"] = 25, ["Cat"] = 25, ["Deer"] = 25 },
    ["Rare Egg"] = { ["Orange Tabby"] = 33.33, ["Spotted Deer"] = 25, ["Pig"] = 16.67, ["Rooster"] = 16.67, ["Monkey"] = 8.33 },
    ["Legendary Egg"] = { ["Cow"] = 42.55, ["Silver Monkey"] = 42.55, ["Sea Otter"] = 10.64, ["Turtle"] = 2.13, ["Polar Bear"] = 2.13 },
    ["Mythic Egg"] = { ["Grey Mouse"] = 37.5, ["Brown Mouse"] = 26.79, ["Squirrel"] = 26.79, ["Red Giant Ant"] = 8.93, ["Red Fox"] = 0 },
    ["Bug Egg"] = { ["Snail"] = 40, ["Giant Ant"] = 35, ["Caterpillar"] = 25, ["Praying Mantis"] = 0, ["Dragon Fly"] = 0 },
    ["Night Egg"] = { ["Hedgehog"] = 47, ["Mole"] = 23.5, ["Frog"] = 21.16, ["Echo Frog"] = 8.35, ["Night Owl"] = 0, ["Raccoon"] = 0 },
    ["Bee Egg"] = { ["Bee"] = 65, ["Honey Bee"] = 20, ["Bear Bee"] = 10, ["Petal Bee"] = 5, ["Queen Bee"] = 0 },
    ["Anti Bee Egg"] = { ["Wasp"] = 55, ["Tarantula Hawk"] = 31, ["Moth"] = 14, ["Butterfly"] = 0, ["Disco Bee"] = 0 },
    ["Common Summer Egg"] = { ["Starfish"] = 50, ["Seafull"] = 25, ["Crab"] = 25 },
    ["Rare Summer Egg"] = { ["Flamingo"] = 30, ["Toucan"] = 25, ["Sea Turtle"] = 20, ["Orangutan"] = 15, ["Seal"] = 10 },
    ["Paradise Egg"] = { ["Ostrich"] = 43, ["Peacock"] = 33, ["Capybara"] = 24, ["Scarlet Macaw"] = 3, ["Mimic Octopus"] = 1 },
    ["Premium Night Egg"] = { ["Hedgehog"] = 50, ["Mole"] = 26, ["Frog"] = 14, ["Echo Frog"] = 10 }
}

local displayedEggs = {}

local function weightedRandom(options)
    local valid, total = {}, 0
    for pet, chance in pairs(options) do
        if chance > 0 then
            total += chance
            table.insert(valid, {pet = pet, weight = chance})
        end
    end
    local roll, cumulative = math.random() * total, 0
    for _, v in ipairs(valid) do
        cumulative += v.weight
        if roll <= cumulative then return v.pet end
    end
end

local function getNonRepeatingRandomPet(eggName, lastPet)
    local pool = eggChances[eggName]
    if not pool then return nil end
    for _ = 1, 5 do
        local pet = weightedRandom(pool)
        if pet and (pet ~= lastPet or math.random() < 0.3) then
            return pet
        end
    end
    return lastPet
end

local function createEspGui(object, labelText)
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PetESP"
    billboard.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 2.5, 0)
    billboard.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0
    label.TextScaled = true
    label.Font = Enum.Font.SourceSansBold
    label.Text = labelText
    label.Parent = billboard

    -- FIX: BillboardGui should NOT be parented to the egg
    billboard.Parent = game:GetService("CoreGui")

    return billboard, label
end

local function addESP(egg)
    if egg:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local eggName = egg:GetAttribute("EggName")
    local objectId = egg:GetAttribute("OBJECT_UUID")
    if not eggName or not objectId or displayedEggs[objectId] then return end

    local petPrediction = eggChances[eggName] and getNonRepeatingRandomPet(eggName, nil)
    local labelText = petPrediction and (eggName .. " | " .. petPrediction) or eggName .. " | ?"

    local gui, label = createEspGui(egg, labelText)
    gui.Adornee = egg:FindFirstChildWhichIsA("BasePart") or egg.PrimaryPart or egg

    displayedEggs[objectId] = {
        egg = egg,
        gui = gui,
        label = label,
        eggName = eggName,
        lastPet = petPrediction
    }
end

local function removeESP(egg)
    local objectId = egg:GetAttribute("OBJECT_UUID")
    if objectId and displayedEggs[objectId] then
        displayedEggs[objectId].gui:Destroy()
        displayedEggs[objectId] = nil
    end
end

-- Watch for eggs being added/removed
for _, egg in collectionService:GetTagged("PetEggServer") do
    addESP(egg)
end
collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(addESP)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(removeESP)

-- Fix reroll logic only (do not modify UI)
local function rerollESP()
    for objectId, data in pairs(displayedEggs) do
        local newPet = getNonRepeatingRandomPet(data.eggName, data.lastPet)
        if newPet and data.label then
            data.label.Text = data.eggName .. " | " .. newPet
            data.lastPet = newPet
        end
    end
end

_G.TriggerPetESP_Reroll = rerollESP -- You can call this from the UI reroll button
