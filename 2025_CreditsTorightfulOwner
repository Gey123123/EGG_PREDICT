local players = game:GetService("Players")
local collectionService = game:GetService("CollectionService")
local localPlayer = players.LocalPlayer or players:GetPlayers()[1]
local eggChances = {
    -- Your egg chances remain the same
}

local displayedEggs = {}
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PetESP"
screenGui.Parent = game:GetService("CoreGui") -- Parent to CoreGui for visibility

-- Create a folder to store all ESP labels
local espFolder = Instance.new("Folder")
espFolder.Name = "ESPFolder"
espFolder.Parent = screenGui

local function weightedRandom(tbl)
    -- Your weightedRandom function remains the same
end

local function createBillboard(egg, petName)
    local adornee = egg:FindFirstChildWhichIsA("BasePart") or egg.PrimaryPart
    if not adornee then return nil end
    
    local billboard = Instance.new("BillboardGui")
    billboard.Name = "PetESP"
    billboard.Adornee = adornee
    billboard.Size = UDim2.new(0, 200, 0, 50)
    billboard.StudsOffset = Vector3.new(0, 3, 0)
    billboard.AlwaysOnTop = true
    billboard.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
    billboard.Parent = espFolder
    
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Text = petName
    label.Name = "PetNameLabel"
    label.Parent = billboard
    
    return label
end

local function addESP(egg)
    if egg:GetAttribute("OWNER") ~= localPlayer.Name then return end
    
    local eggName = egg:GetAttribute("EggName")
    local uuid = egg:GetAttribute("OBJECT_UUID")
    
    if not eggName or not uuid or displayedEggs[uuid] then return end
    
    local chosenPet = weightedRandom(eggChances[eggName] or {}) or "?"
    local label = createBillboard(egg, eggName .. " | " .. chosenPet)
    
    if label then
        displayedEggs[uuid] = { egg = egg, label = label, eggName = eggName, currentPet = chosenPet }
    end
end

local function removeESP(egg)
    local uuid = egg:GetAttribute("OBJECT_UUID")
    local data = displayedEggs[uuid]
    if data then
        if data.label and data.label.Parent then
            data.label:Destroy()
        end
        displayedEggs[uuid] = nil
    end
end

-- Connect all existing and future eggs
for _, egg in collectionService:GetTagged("PetEggServer") do
    addESP(egg)
end

collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(addESP)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(removeESP)

-- Reroll handler
local function reroll()
    for _, data in pairs(displayedEggs) do
        local newPet = weightedRandom(eggChances[data.eggName] or {}) or "?"
        data.currentPet = newPet
        if data.label then
            data.label.Text = data.eggName .. " | " .. newPet
        end
    end
end

-- Create a visible UI for reroll button
local function createRerollUI()
    local gui = Instance.new("ScreenGui")
    gui.Name = "PetRerollGUI"
    gui.Parent = game:GetService("CoreGui")
    
    local frame = Instance.new("Frame")
    frame.Size = UDim2.new(0, 150, 0, 50)
    frame.Position = UDim2.new(0.5, -75, 0.9, -25)
    frame.BackgroundColor3 = Color3.new(0.2, 0.2, 0.2)
    frame.BorderSizePixel = 0
    frame.AnchorPoint = Vector2.new(0.5, 0.5)
    frame.Parent = gui
    
    local button = Instance.new("TextButton")
    button.Size = UDim2.new(1, 0, 1, 0)
    button.Text = "Reroll Pets"
    button.TextColor3 = Color3.new(1, 1, 1)
    button.Font = Enum.Font.GothamBold
    button.TextScaled = true
    button.BackgroundColor3 = Color3.new(0.3, 0.3, 0.8)
    button.BorderSizePixel = 0
    button.Parent = frame
    
    button.MouseButton1Click:Connect(reroll)
    
    return gui
end

-- Create and show the reroll UI
createRerollUI()
