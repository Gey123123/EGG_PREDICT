-- ✅ FINAL VERSION: Visual Pet Reroll + UI Integrated

local players = game:GetService("Players")
local collectionService = game:GetService("CollectionService")
local userInputService = game:GetService("UserInputService")
local tweenService = game:GetService("TweenService")
local localPlayer = players.LocalPlayer or players:GetPlayers()[1]

-- === EGG CHANCES ===
local eggChances = {
    ["Common Egg"] = { ["Dog"] = 33, ["Bunny"] = 33, ["Golden Lab"] = 33 },
    ["Uncommon Egg"] = { ["Black Bunny"] = 25, ["Chicken"] = 25, ["Cat"] = 25, ["Deer"] = 25 },
    ["Rare Egg"] = { ["Orange Tabby"] = 33.33, ["Spotted Deer"] = 25, ["Pig"] = 16.67, ["Rooster"] = 16.67, ["Monkey"] = 8.33 },
    ["Legendary Egg"] = { ["Cow"] = 42.55, ["Silver Monkey"] = 42.55, ["Sea Otter"] = 10.64, ["Turtle"] = 2.13, ["Polar Bear"] = 2.13 },
    ["Mythic Egg"] = { ["Grey Mouse"] = 37.5, ["Brown Mouse"] = 26.79, ["Squirrel"] = 26.79, ["Red Giant Ant"] = 8.93, ["Red Fox"] = 0 },
    ["Bug Egg"] = { ["Snail"] = 40, ["Giant Ant"] = 35, ["Caterpillar"] = 25, ["Praying Mantis"] = 0, ["Dragon Fly"] = 0 },
    ["Night Egg"] = { ["Hedgehog"] = 47, ["Mole"] = 23.5, ["Frog"] = 21.16, ["Echo Frog"] = 8.35, ["Night Owl"] = 0, ["Raccoon"] = 0 },
    ["Bee Egg"] = { ["Bee"] = 65, ["Honey Bee"] = 20, ["Bear Bee"] = 10, ["Petal Bee"] = 5, ["Queen Bee"] = 0 },
    ["Anti Bee Egg"] = { ["Wasp"] = 55, ["Tarantula Hawk"] = 31, ["Moth"] = 14, ["Butterfly"] = 0, ["Disco Bee"] = 0 },
    ["Common Summer Egg"] = { ["Starfish"] = 50, ["Seafull"] = 25, ["Crab"] = 25 },
    ["Rare Summer Egg"] = { ["Flamingo"] = 30, ["Toucan"] = 25, ["Sea Turtle"] = 20, ["Orangutan"] = 15, ["Seal"] = 10 },
    ["Paradise Egg"] = { ["Ostrich"] = 43, ["Peacock"] = 33, ["Capybara"] = 24, ["Scarlet Macaw"] = 3, ["Mimic Octopus"] = 1 },
    ["Premium Night Egg"] = { ["Hedgehog"] = 50, ["Mole"] = 26, ["Frog"] = 14, ["Echo Frog"] = 10 }
}

local displayedEggs = {}

-- === RANDOM SELECTION ===
local function weightedRandom(options)
    local valid = {}
    local total = 0
    for pet, chance in pairs(options) do
        if chance > 0 then
            total += chance
            table.insert(valid, {pet = pet, weight = chance})
        end
    end
    if total == 0 then return nil end
    local roll, sum = math.random() * total, 0
    for _, entry in ipairs(valid) do
        sum += entry.weight
        if roll <= sum then return entry.pet end
    end
    return valid[1].pet
end

local function getNonRepeatingRandomPet(eggName, lastPet)
    local pool = eggChances[eggName]
    if not pool then return nil end
    for _ = 1, 5 do
        local pick = weightedRandom(pool)
        if pick ~= lastPet or math.random() < 0.3 then
            return pick
        end
    end
    return lastPet
end

-- === GUI ===
local function createEspGui(object, labelText)
    local gui = Instance.new("BillboardGui")
    gui.Name = "PetESP"
    gui.Adornee = object:FindFirstChildWhichIsA("BasePart") or object.PrimaryPart or object
    gui.Size = UDim2.new(0, 200, 0, 50)
    gui.StudsOffset = Vector3.new(0, 2.5, 0)
    gui.AlwaysOnTop = true

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.TextColor3 = Color3.new(1, 1, 1)
    label.TextStrokeTransparency = 0
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Text = labelText
    label.Parent = gui

    gui.Parent = game:GetService("CoreGui")
    return gui, label
end

-- === ADD / REMOVE ===
local function addESP(egg)
    if egg:GetAttribute("OWNER") ~= localPlayer.Name then return end
    local eggName = egg:GetAttribute("EggName")
    local objectId = egg:GetAttribute("OBJECT_UUID")
    if not eggName or not objectId or displayedEggs[objectId] then return end

    local pet = getNonRepeatingRandomPet(eggName)
    local gui, label = createEspGui(egg, eggName .. " | " .. (pet or "?"))

    displayedEggs[objectId] = {
        egg = egg,
        gui = gui,
        label = label,
        eggName = eggName,
        lastPet = pet
    }
end

local function removeESP(egg)
    local objectId = egg:GetAttribute("OBJECT_UUID")
    if objectId and displayedEggs[objectId] then
        displayedEggs[objectId].gui:Destroy()
        displayedEggs[objectId] = nil
    end
end

-- === INIT ===
for _, egg in collectionService:GetTagged("PetEggServer") do
    addESP(egg)
end
collectionService:GetInstanceAddedSignal("PetEggServer"):Connect(addESP)
collectionService:GetInstanceRemovedSignal("PetEggServer"):Connect(removeESP)

-- === VISUAL REROLL FUNCTION ===
_G.TriggerPetESP_Reroll = function()
    for objectId, data in pairs(displayedEggs) do
        local newPet = getNonRepeatingRandomPet(data.eggName, data.lastPet)
        if newPet and data.label then
            data.label.Text = data.eggName .. " | " .. newPet
            data.lastPet = newPet
        end
    end
end

-- === UI SECTION: Connect B Button ===
local gui = Instance.new("ScreenGui")
gui.Name = "RandomizerGUI"
gui.ResetOnSpawn = false
gui.Parent = localPlayer:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 210, 0, 190)
frame.Position = UDim2.new(1, -220, 0, 20)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 35)
frame.BorderSizePixel = 0
frame.AnchorPoint = Vector2.new(1, 0)
frame.Active = true
frame.Draggable = false
frame.Parent = gui

Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

local layout = Instance.new("UIListLayout", frame)
layout.Padding = UDim.new(0, 6)
layout.FillDirection = Enum.FillDirection.Vertical
layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.VerticalAlignment = Enum.VerticalAlignment.Top

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0, 30)
title.BackgroundTransparency = 1
title.Text = "🐾 Pet Selector"
title.TextColor3 = Color3.new(1, 1, 1)
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.Parent = frame

local function createFancyButton(text, color)
    local btn = Instance.new("TextButton")
    btn.Size = UDim2.new(1, -12, 0, 34)
    btn.BackgroundColor3 = color
    btn.TextColor3 = Color3.new(1, 1, 1)
    btn.Text = text
    btn.TextScaled = true
    btn.Font = Enum.Font.GothamBold
    Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

    btn.MouseEnter:Connect(function()
        tweenService:Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = color:lerp(Color3.new(1,1,1), 0.15)
        }):Play()
    end)
    btn.MouseLeave:Connect(function()
        tweenService:Create(btn, TweenInfo.new(0.15), {
            BackgroundColor3 = color
        }):Play()
    end)

    return btn
end

-- Auto Stop toggle (optional, preserved)
local stopBtnColor = Color3.fromRGB(85, 85, 85)
local autoStopOn = true
local stopBtn = createFancyButton("[A] Auto Stop: ON", stopBtnColor)
stopBtn.Parent = frame
stopBtn.MouseButton1Click:Connect(function()
    autoStopOn = not autoStopOn
    stopBtn.Text = autoStopOn and "[A] Auto Stop: ON" or "[A] Auto Stop: OFF"
end)

-- 🟦 B: REROLL BUTTON (connected)
local rerollBtn = createFancyButton("[B] Reroll Pet Display", Color3.fromRGB(50, 120, 220))
rerollBtn.Parent = frame
rerollBtn.MouseButton1Click:Connect(function()
    if _G.TriggerPetESP_Reroll then
        _G.TriggerPetESP_Reroll()
    end
end)

-- Info button
local infoBtn = createFancyButton("?", Color3.fromRGB(90, 160, 60))
infoBtn.Size = UDim2.new(0, 40, 0, 34)
infoBtn.Parent = frame
infoBtn.MouseButton1Click:Connect(function()
    pcall(function()
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Info",
            Text = "Auto Stop when found: Raccoon, Dragonfly, Queen Bee, Red Fox, Disco Bee, Butterfly.",
            Duration = 5
        })
    end)
end)

-- Dragging logic
local dragging, dragInput, dragStart, startPos
frame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        dragging = true
        dragStart = input.Position
        startPos = frame.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
frame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement then
        dragInput = input
    end
end)
userInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)
